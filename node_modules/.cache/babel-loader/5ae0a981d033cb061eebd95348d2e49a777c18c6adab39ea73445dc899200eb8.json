{"ast":null,"code":"var _jsxFileName = \"/home/aksshay88/Desktop/Code_for_education/hackathon_react/hackathon-management/src/components/Timer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timer = ({\n  hackathonDate\n}) => {\n  _s();\n  const [timeRemaining, setTimeRemaining] = useState(\"\");\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      const now = new Date();\n      const endTime = new Date(hackathonDate);\n      const timeDiff = endTime - now;\n      if (timeDiff > 0) {\n        const hours = Math.floor(timeDiff % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n        const minutes = Math.floor(timeDiff % (1000 * 60 * 60) / (1000 * 60));\n        const seconds = Math.floor(timeDiff % (1000 * 60) / 1000);\n        setTimeRemaining(`${hours}h ${minutes}m ${seconds}s`);\n      } else {\n        setTimeRemaining(\"Time expired!\");\n        clearInterval(intervalId);\n      }\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, [hackathonDate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: timeRemaining\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n};\n_s(Timer, \"TxMDP+1JfM0JNmPPeHvmbXu1O2g=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Timer","hackathonDate","_s","timeRemaining","setTimeRemaining","intervalId","setInterval","now","Date","endTime","timeDiff","hours","Math","floor","minutes","seconds","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/aksshay88/Desktop/Code_for_education/hackathon_react/hackathon-management/src/components/Timer.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst Timer = ({ hackathonDate }) => {\n  const [timeRemaining, setTimeRemaining] = useState(\"\");\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      const now = new Date();\n      const endTime = new Date(hackathonDate);\n      const timeDiff = endTime - now;\n\n      if (timeDiff > 0) {\n        const hours = Math.floor(\n          (timeDiff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60),\n        );\n        const minutes = Math.floor((timeDiff % (1000 * 60 * 60)) / (1000 * 60));\n        const seconds = Math.floor((timeDiff % (1000 * 60)) / 1000);\n\n        setTimeRemaining(`${hours}h ${minutes}m ${seconds}s`);\n      } else {\n        setTimeRemaining(\"Time expired!\");\n        clearInterval(intervalId);\n      }\n    }, 1000);\n\n    return () => clearInterval(intervalId);\n  }, [hackathonDate]);\n\n  return <div>{timeRemaining}</div>;\n};\n\nexport default Timer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACd,MAAMS,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnC,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;MACtB,MAAMC,OAAO,GAAG,IAAID,IAAI,CAACP,aAAa,CAAC;MACvC,MAAMS,QAAQ,GAAGD,OAAO,GAAGF,GAAG;MAE9B,IAAIG,QAAQ,GAAG,CAAC,EAAE;QAChB,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CACrBH,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,IAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CACtD,CAAC;QACD,MAAMI,OAAO,GAAGF,IAAI,CAACC,KAAK,CAAEH,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,IAAK,IAAI,GAAG,EAAE,CAAC,CAAC;QACvE,MAAMK,OAAO,GAAGH,IAAI,CAACC,KAAK,CAAEH,QAAQ,IAAI,IAAI,GAAG,EAAE,CAAC,GAAI,IAAI,CAAC;QAE3DN,gBAAgB,CAAE,GAAEO,KAAM,KAAIG,OAAQ,KAAIC,OAAQ,GAAE,CAAC;MACvD,CAAC,MAAM;QACLX,gBAAgB,CAAC,eAAe,CAAC;QACjCY,aAAa,CAACX,UAAU,CAAC;MAC3B;IACF,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMW,aAAa,CAACX,UAAU,CAAC;EACxC,CAAC,EAAE,CAACJ,aAAa,CAAC,CAAC;EAEnB,oBAAOF,OAAA;IAAAkB,QAAA,EAAMd;EAAa;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACnC,CAAC;AAACnB,EAAA,CA3BIF,KAAK;AAAAsB,EAAA,GAALtB,KAAK;AA6BX,eAAeA,KAAK;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}